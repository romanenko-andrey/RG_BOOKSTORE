%h2= @page
%main.container
  %h1.general-title-margin Catalog (#{category})
  .hidden-xs.clearfix
    .dropdowns.pull-right
      .dropdown.width-240
        %a.dropdown-toggle.lead.small{href: "#", 'data-toggle': "dropdown", role: "button", 'aria-haspopup': "true", 'aria-expanded': "false"}
          = I18n.t("books.sort_methods.#{sort_method}")
          %i.fa.fa-angle-down.dropdown-icon.pull-right
        = render :partial => 'sort_list'
       
    %ul.list-inline.pt-10.mb-25.mr-240
      - categories_info.each do |category|
        %li.mr-35
          = link_to books_path(category: category[:name]), class: "filter-link" do
            =category[:name]
            %span.badge.general-badge= category[:count]

  .dropdowns.mb-25.visible-xs
    %p.lead.small.mb-10 Filter by category
    .dropdown
      %a.dropdown-toggle.lead.small{href: "#", 'data-toggle': "dropdown", role: "button", 'aria-haspopup': "true", 'aria-expanded': "false"}
        = category
        %i.fa.fa-angle-down.dropdown-icon.pull-right
      %ul.dropdown-menu
        - categories_info.each do |category|
          %li
            = link_to "#{category[:name]}", books_path(category: category[:name])
       
    %p.lead.small.mb-10 Sort by
    .dropdown
      %a.dropdown-toggle.lead.small{href: "#", 'data-toggle': "dropdown", role: "button", 'aria-haspopup': "true", 'aria-expanded': "false"}
        = I18n.t("books.sort_methods.#{sort_method}")
        %i.fa.fa-angle-down.dropdown-icon.pull-right
      = render :partial => 'sort_list'

  .mb-120
    .row
      = render :partial => 'book_details', collection: @books, as: :book
    .text-center
      - if first_page?
        = link_to_next_page @books, 'View More', class: "btn btn-primary"
      - else
        = paginate @books